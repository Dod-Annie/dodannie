/**
 * This file was automatically generated by Nexus 0.11.6
 * Do not make changes to this file directly
 */




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  UserCreateInput: { // input type
    isVip?: boolean | null; // Boolean
    password: string; // String!
    realName: string; // String!
    userName: string; // String!
    vip?: NexusGenInputs['VipCreateOneWithoutOwnerInput'] | null; // VipCreateOneWithoutOwnerInput
  }
  UserCreateOneWithoutVipInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
    create?: NexusGenInputs['UserCreateWithoutVipInput'] | null; // UserCreateWithoutVipInput
  }
  UserCreateWithoutVipInput: { // input type
    isVip?: boolean | null; // Boolean
    password: string; // String!
    realName: string; // String!
    userName: string; // String!
  }
  UserUpdateInput: { // input type
    isVip?: boolean | null; // Boolean
    password?: string | null; // String
    realName?: string | null; // String
    userName?: string | null; // String
    vip?: NexusGenInputs['VipUpdateOneWithoutOwnerInput'] | null; // VipUpdateOneWithoutOwnerInput
  }
  UserUpdateManyMutationInput: { // input type
    isVip?: boolean | null; // Boolean
    password?: string | null; // String
    realName?: string | null; // String
    userName?: string | null; // String
  }
  UserUpdateOneWithoutVipInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
    create?: NexusGenInputs['UserCreateWithoutVipInput'] | null; // UserCreateWithoutVipInput
    delete?: boolean | null; // Boolean
    disconnect?: boolean | null; // Boolean
    update?: NexusGenInputs['UserUpdateWithoutVipDataInput'] | null; // UserUpdateWithoutVipDataInput
    upsert?: NexusGenInputs['UserUpsertWithoutVipInput'] | null; // UserUpsertWithoutVipInput
  }
  UserUpdateWithoutVipDataInput: { // input type
    isVip?: boolean | null; // Boolean
    password?: string | null; // String
    realName?: string | null; // String
    userName?: string | null; // String
  }
  UserUpsertWithoutVipInput: { // input type
    create: NexusGenInputs['UserCreateWithoutVipInput']; // UserCreateWithoutVipInput!
    update: NexusGenInputs['UserUpdateWithoutVipDataInput']; // UserUpdateWithoutVipDataInput!
  }
  UserWhereInput: { // input type
    AND?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    id?: string | null; // ID
    id_contains?: string | null; // ID
    id_ends_with?: string | null; // ID
    id_gt?: string | null; // ID
    id_gte?: string | null; // ID
    id_in?: string[] | null; // [ID!]
    id_lt?: string | null; // ID
    id_lte?: string | null; // ID
    id_not?: string | null; // ID
    id_not_contains?: string | null; // ID
    id_not_ends_with?: string | null; // ID
    id_not_in?: string[] | null; // [ID!]
    id_not_starts_with?: string | null; // ID
    id_starts_with?: string | null; // ID
    isVip?: boolean | null; // Boolean
    isVip_not?: boolean | null; // Boolean
    NOT?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    OR?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    password?: string | null; // String
    password_contains?: string | null; // String
    password_ends_with?: string | null; // String
    password_gt?: string | null; // String
    password_gte?: string | null; // String
    password_in?: string[] | null; // [String!]
    password_lt?: string | null; // String
    password_lte?: string | null; // String
    password_not?: string | null; // String
    password_not_contains?: string | null; // String
    password_not_ends_with?: string | null; // String
    password_not_in?: string[] | null; // [String!]
    password_not_starts_with?: string | null; // String
    password_starts_with?: string | null; // String
    realName?: string | null; // String
    realName_contains?: string | null; // String
    realName_ends_with?: string | null; // String
    realName_gt?: string | null; // String
    realName_gte?: string | null; // String
    realName_in?: string[] | null; // [String!]
    realName_lt?: string | null; // String
    realName_lte?: string | null; // String
    realName_not?: string | null; // String
    realName_not_contains?: string | null; // String
    realName_not_ends_with?: string | null; // String
    realName_not_in?: string[] | null; // [String!]
    realName_not_starts_with?: string | null; // String
    realName_starts_with?: string | null; // String
    userName?: string | null; // String
    userName_contains?: string | null; // String
    userName_ends_with?: string | null; // String
    userName_gt?: string | null; // String
    userName_gte?: string | null; // String
    userName_in?: string[] | null; // [String!]
    userName_lt?: string | null; // String
    userName_lte?: string | null; // String
    userName_not?: string | null; // String
    userName_not_contains?: string | null; // String
    userName_not_ends_with?: string | null; // String
    userName_not_in?: string[] | null; // [String!]
    userName_not_starts_with?: string | null; // String
    userName_starts_with?: string | null; // String
    vip?: NexusGenInputs['VipWhereInput'] | null; // VipWhereInput
  }
  UserWhereUniqueInput: { // input type
    id?: string | null; // ID
    userName?: string | null; // String
  }
  VipCreateInput: { // input type
    level?: number | null; // Int
    owner?: NexusGenInputs['UserCreateOneWithoutVipInput'] | null; // UserCreateOneWithoutVipInput
    title?: string | null; // String
  }
  VipCreateOneWithoutOwnerInput: { // input type
    connect?: NexusGenInputs['VipWhereUniqueInput'] | null; // VipWhereUniqueInput
    create?: NexusGenInputs['VipCreateWithoutOwnerInput'] | null; // VipCreateWithoutOwnerInput
  }
  VipCreateWithoutOwnerInput: { // input type
    level?: number | null; // Int
    title?: string | null; // String
  }
  VipUpdateInput: { // input type
    level?: number | null; // Int
    owner?: NexusGenInputs['UserUpdateOneWithoutVipInput'] | null; // UserUpdateOneWithoutVipInput
    title?: string | null; // String
  }
  VipUpdateManyMutationInput: { // input type
    level?: number | null; // Int
    title?: string | null; // String
  }
  VipUpdateOneWithoutOwnerInput: { // input type
    connect?: NexusGenInputs['VipWhereUniqueInput'] | null; // VipWhereUniqueInput
    create?: NexusGenInputs['VipCreateWithoutOwnerInput'] | null; // VipCreateWithoutOwnerInput
    delete?: boolean | null; // Boolean
    disconnect?: boolean | null; // Boolean
    update?: NexusGenInputs['VipUpdateWithoutOwnerDataInput'] | null; // VipUpdateWithoutOwnerDataInput
    upsert?: NexusGenInputs['VipUpsertWithoutOwnerInput'] | null; // VipUpsertWithoutOwnerInput
  }
  VipUpdateWithoutOwnerDataInput: { // input type
    level?: number | null; // Int
    title?: string | null; // String
  }
  VipUpsertWithoutOwnerInput: { // input type
    create: NexusGenInputs['VipCreateWithoutOwnerInput']; // VipCreateWithoutOwnerInput!
    update: NexusGenInputs['VipUpdateWithoutOwnerDataInput']; // VipUpdateWithoutOwnerDataInput!
  }
  VipWhereInput: { // input type
    AND?: NexusGenInputs['VipWhereInput'][] | null; // [VipWhereInput!]
    id?: string | null; // ID
    id_contains?: string | null; // ID
    id_ends_with?: string | null; // ID
    id_gt?: string | null; // ID
    id_gte?: string | null; // ID
    id_in?: string[] | null; // [ID!]
    id_lt?: string | null; // ID
    id_lte?: string | null; // ID
    id_not?: string | null; // ID
    id_not_contains?: string | null; // ID
    id_not_ends_with?: string | null; // ID
    id_not_in?: string[] | null; // [ID!]
    id_not_starts_with?: string | null; // ID
    id_starts_with?: string | null; // ID
    level?: number | null; // Int
    level_gt?: number | null; // Int
    level_gte?: number | null; // Int
    level_in?: number[] | null; // [Int!]
    level_lt?: number | null; // Int
    level_lte?: number | null; // Int
    level_not?: number | null; // Int
    level_not_in?: number[] | null; // [Int!]
    NOT?: NexusGenInputs['VipWhereInput'][] | null; // [VipWhereInput!]
    OR?: NexusGenInputs['VipWhereInput'][] | null; // [VipWhereInput!]
    owner?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    title?: string | null; // String
    title_contains?: string | null; // String
    title_ends_with?: string | null; // String
    title_gt?: string | null; // String
    title_gte?: string | null; // String
    title_in?: string[] | null; // [String!]
    title_lt?: string | null; // String
    title_lte?: string | null; // String
    title_not?: string | null; // String
    title_not_contains?: string | null; // String
    title_not_ends_with?: string | null; // String
    title_not_in?: string[] | null; // [String!]
    title_not_starts_with?: string | null; // String
    title_starts_with?: string | null; // String
  }
  VipWhereUniqueInput: { // input type
    id?: string | null; // ID
  }
}

export interface NexusGenEnums {
  UserOrderByInput: "createdAt_ASC" | "createdAt_DESC" | "id_ASC" | "id_DESC" | "isVip_ASC" | "isVip_DESC" | "password_ASC" | "password_DESC" | "realName_ASC" | "realName_DESC" | "updatedAt_ASC" | "updatedAt_DESC" | "userName_ASC" | "userName_DESC"
  VipOrderByInput: "createdAt_ASC" | "createdAt_DESC" | "id_ASC" | "id_DESC" | "level_ASC" | "level_DESC" | "title_ASC" | "title_DESC" | "updatedAt_ASC" | "updatedAt_DESC"
}

export interface NexusGenRootTypes {
  AggregateUser: { // root type
    count: number; // Int!
  }
  AggregateVip: { // root type
    count: number; // Int!
  }
  BatchPayload: { // root type
    count: any; // Long!
  }
  Mutation: {};
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
  User: { // root type
    id: string; // ID!
    isVip: boolean; // Boolean!
    password: string; // String!
    realName: string; // String!
    userName: string; // String!
  }
  UserConnection: { // root type
    edges: NexusGenRootTypes['UserEdge'][]; // [UserEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  UserEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['User']; // User!
  }
  Vip: { // root type
    id: string; // ID!
    level?: number | null; // Int
    title?: string | null; // String
  }
  VipConnection: { // root type
    edges: NexusGenRootTypes['VipEdge'][]; // [VipEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  VipEdge: { // root type
    cursor: string; // String!
    node: NexusGenRootTypes['Vip']; // Vip!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  Long: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  UserCreateInput: NexusGenInputs['UserCreateInput'];
  UserCreateOneWithoutVipInput: NexusGenInputs['UserCreateOneWithoutVipInput'];
  UserCreateWithoutVipInput: NexusGenInputs['UserCreateWithoutVipInput'];
  UserUpdateInput: NexusGenInputs['UserUpdateInput'];
  UserUpdateManyMutationInput: NexusGenInputs['UserUpdateManyMutationInput'];
  UserUpdateOneWithoutVipInput: NexusGenInputs['UserUpdateOneWithoutVipInput'];
  UserUpdateWithoutVipDataInput: NexusGenInputs['UserUpdateWithoutVipDataInput'];
  UserUpsertWithoutVipInput: NexusGenInputs['UserUpsertWithoutVipInput'];
  UserWhereInput: NexusGenInputs['UserWhereInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  VipCreateInput: NexusGenInputs['VipCreateInput'];
  VipCreateOneWithoutOwnerInput: NexusGenInputs['VipCreateOneWithoutOwnerInput'];
  VipCreateWithoutOwnerInput: NexusGenInputs['VipCreateWithoutOwnerInput'];
  VipUpdateInput: NexusGenInputs['VipUpdateInput'];
  VipUpdateManyMutationInput: NexusGenInputs['VipUpdateManyMutationInput'];
  VipUpdateOneWithoutOwnerInput: NexusGenInputs['VipUpdateOneWithoutOwnerInput'];
  VipUpdateWithoutOwnerDataInput: NexusGenInputs['VipUpdateWithoutOwnerDataInput'];
  VipUpsertWithoutOwnerInput: NexusGenInputs['VipUpsertWithoutOwnerInput'];
  VipWhereInput: NexusGenInputs['VipWhereInput'];
  VipWhereUniqueInput: NexusGenInputs['VipWhereUniqueInput'];
  UserOrderByInput: NexusGenEnums['UserOrderByInput'];
  VipOrderByInput: NexusGenEnums['VipOrderByInput'];
}

export interface NexusGenFieldTypes {
  AggregateUser: { // field return type
    count: number; // Int!
  }
  AggregateVip: { // field return type
    count: number; // Int!
  }
  BatchPayload: { // field return type
    count: any; // Long!
  }
  Mutation: { // field return type
    createUser: NexusGenRootTypes['User']; // User!
    createVip: NexusGenRootTypes['Vip']; // Vip!
    deleteManyUsers: NexusGenRootTypes['BatchPayload']; // BatchPayload!
    deleteManyVips: NexusGenRootTypes['BatchPayload']; // BatchPayload!
    deleteUser: NexusGenRootTypes['User'] | null; // User
    deleteVip: NexusGenRootTypes['Vip'] | null; // Vip
    updateManyUsers: NexusGenRootTypes['BatchPayload']; // BatchPayload!
    updateManyVips: NexusGenRootTypes['BatchPayload']; // BatchPayload!
    updateUser: NexusGenRootTypes['User'] | null; // User
    updateVip: NexusGenRootTypes['Vip'] | null; // Vip
    upsertUser: NexusGenRootTypes['User']; // User!
    upsertVip: NexusGenRootTypes['Vip']; // Vip!
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
    usersConnection: NexusGenRootTypes['UserConnection']; // UserConnection!
    vip: NexusGenRootTypes['Vip'] | null; // Vip
    vips: NexusGenRootTypes['Vip'][]; // [Vip!]!
    vipsConnection: NexusGenRootTypes['VipConnection']; // VipConnection!
  }
  User: { // field return type
    id: string; // ID!
    isVip: boolean; // Boolean!
    password: string; // String!
    realName: string; // String!
    userName: string; // String!
    vip: NexusGenRootTypes['Vip'] | null; // Vip
  }
  UserConnection: { // field return type
    aggregate: NexusGenRootTypes['AggregateUser']; // AggregateUser!
    edges: NexusGenRootTypes['UserEdge'][]; // [UserEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  UserEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['User']; // User!
  }
  Vip: { // field return type
    id: string; // ID!
    level: number | null; // Int
    owner: NexusGenRootTypes['User'] | null; // User
    title: string | null; // String
  }
  VipConnection: { // field return type
    aggregate: NexusGenRootTypes['AggregateVip']; // AggregateVip!
    edges: NexusGenRootTypes['VipEdge'][]; // [VipEdge!]!
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  VipEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Vip']; // Vip!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createUser: { // args
      data: NexusGenInputs['UserCreateInput']; // UserCreateInput!
    }
    createVip: { // args
      data: NexusGenInputs['VipCreateInput']; // VipCreateInput!
    }
    deleteManyUsers: { // args
      where?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    }
    deleteManyVips: { // args
      where?: NexusGenInputs['VipWhereInput'] | null; // VipWhereInput
    }
    deleteUser: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    deleteVip: { // args
      where: NexusGenInputs['VipWhereUniqueInput']; // VipWhereUniqueInput!
    }
    updateManyUsers: { // args
      data: NexusGenInputs['UserUpdateManyMutationInput']; // UserUpdateManyMutationInput!
      where?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    }
    updateManyVips: { // args
      data: NexusGenInputs['VipUpdateManyMutationInput']; // VipUpdateManyMutationInput!
      where?: NexusGenInputs['VipWhereInput'] | null; // VipWhereInput
    }
    updateUser: { // args
      data: NexusGenInputs['UserUpdateInput']; // UserUpdateInput!
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    updateVip: { // args
      data: NexusGenInputs['VipUpdateInput']; // VipUpdateInput!
      where: NexusGenInputs['VipWhereUniqueInput']; // VipWhereUniqueInput!
    }
    upsertUser: { // args
      create: NexusGenInputs['UserCreateInput']; // UserCreateInput!
      update: NexusGenInputs['UserUpdateInput']; // UserUpdateInput!
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    upsertVip: { // args
      create: NexusGenInputs['VipCreateInput']; // VipCreateInput!
      update: NexusGenInputs['VipUpdateInput']; // VipUpdateInput!
      where: NexusGenInputs['VipWhereUniqueInput']; // VipWhereUniqueInput!
    }
  }
  Query: {
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    users: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['UserOrderByInput'] | null; // UserOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    }
    usersConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['UserOrderByInput'] | null; // UserOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    }
    vip: { // args
      where: NexusGenInputs['VipWhereUniqueInput']; // VipWhereUniqueInput!
    }
    vips: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['VipOrderByInput'] | null; // VipOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['VipWhereInput'] | null; // VipWhereInput
    }
    vipsConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenEnums['VipOrderByInput'] | null; // VipOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['VipWhereInput'] | null; // VipWhereInput
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AggregateUser" | "AggregateVip" | "BatchPayload" | "Mutation" | "PageInfo" | "Query" | "User" | "UserConnection" | "UserEdge" | "Vip" | "VipConnection" | "VipEdge";

export type NexusGenInputNames = "UserCreateInput" | "UserCreateOneWithoutVipInput" | "UserCreateWithoutVipInput" | "UserUpdateInput" | "UserUpdateManyMutationInput" | "UserUpdateOneWithoutVipInput" | "UserUpdateWithoutVipDataInput" | "UserUpsertWithoutVipInput" | "UserWhereInput" | "UserWhereUniqueInput" | "VipCreateInput" | "VipCreateOneWithoutOwnerInput" | "VipCreateWithoutOwnerInput" | "VipUpdateInput" | "VipUpdateManyMutationInput" | "VipUpdateOneWithoutOwnerInput" | "VipUpdateWithoutOwnerDataInput" | "VipUpsertWithoutOwnerInput" | "VipWhereInput" | "VipWhereUniqueInput";

export type NexusGenEnumNames = "UserOrderByInput" | "VipOrderByInput";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "Long" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}